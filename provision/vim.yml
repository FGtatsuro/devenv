---
- name: Check whether Neovim is installed
  command: "which nvim"
  register: result
  changed_when: no
  ignore_errors: yes
- name: Install Neovim
  block:
    - name: Get Neovim archive
      unarchive:
        src: "{{ archive_url }}"
        dest: "{{ archive_tmp_dir }}"
        remote_src: yes
    - name: Copy Neovim under user bin directory
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        remote_src: yes
        mode: a+x
      with_items: "{{ install_files }}"
    - name: Remove Neovim archive
      file:
        path: /tmp/nvim-linux64
        state: absent
  vars:
    archive_url: https://github.com/neovim/neovim/releases/download/stable/nvim-linux64.tar.gz
    archive_tmp_dir: /tmp
    install_files:
      - { src: "{{ archive_tmp_dir }}/nvim-linux64/bin/nvim", dest: "/usr/local/bin" }
      - { src: "{{ archive_tmp_dir }}/nvim-linux64/share/", dest: "/usr/local/share" }
  become: yes
  when: result.rc != 0
  become: yes

- name: Set Neovim path(from archive)
  set_fact:
    neovim_path: "/usr/local/bin/nvim"
  when: result.rc != 0
- name: Set Neovim path(not archive)
  set_fact:
    neovim_path: "{{ result.stdout }}"
  when: result.rc == 0
- name: Update symlinks related to vi/vim
  alternatives:
    name: "{{ item.name }}"
    link: "{{ item.link }}"
    path: "{{ neovim_path }}"
    priority: 60
  with_items:
    - { name: "vi", link: "/usr/bin/vi" }
    - { name: "vim", link: "/usr/bin/vim" }
    - { name: "editor", link: "/usr/bin/editor" }
  become: yes

- name: Ensure default XDG_CONFIG_HOME exists
  file:
    path: "{{ ansible_env.HOME }}/.config"
    state: directory
- name: Copy Neovim settings
  copy:
    src: "../resources/nvim"
    dest: "{{ ansible_env.HOME }}/.config"
- name: Install Neovim python client
  pip:
    name: pynvim
    executable: "{{ pip3_executable }}"
    extra_args: --user
