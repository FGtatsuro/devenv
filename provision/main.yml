---
- hosts: devenv
  pre_tasks:
    - name: Setup timezone
      import_tasks: timezone.yml
    - name: Set JP-sepecific settings
      import_tasks: jp.yml
      # FYI
      #   - https://docs.ansible.com/ansible/latest/reference_appendices/special_variables.html#special-variables
      #   - https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html#accessing-complex-variable-data
      when: "'jp' in group_names"
  roles:
    - role: FGtatsuro.ssh_config
  tasks:
    - name: Create a workspace directory
      file:
        path: repos
        state: directory
    - name: Install Docker
      import_role:
        name: FGtatsuro.docker_toolbox
      when: "'docker_host' in group_names"
    - name: Additional setup Python environment
      import_tasks: python.yml
    - name: Setup Golang environment
      import_tasks: golang.yml
    - name: Setup Github
      import_tasks: github.yml
    - name: Setup vim
      import_tasks: vim.yml
    - name: Setup DB
      import_tasks: db.yml
    - name: Setup settings related to network
      import_tasks: network.yml
    - name: Setup settings related to terminal
      import_tasks: terminal.yml
- hosts: localhost
  roles:
    - role: FGtatsuro.tmux
  tasks:
    # TODO: Handle this task in tmux role.
    - name: Copy tmux settings
      copy:
        src: "../resources/tmux.conf"
        dest: "{{ ansible_env.HOME }}/.tmux.conf"
    - name: Add profile settings to run tmux on terminal startup
      blockinfile:
        path: "{{ ansible_env.HOME }}/.bash_profile"
        block: |
          if [ $SHLVL = 1 ]; then
            tmux attach || tmux
          fi
          cd ~/devenv
        create: yes
        marker_begin: "tmux settings: BEGIN"
        marker_end: "tmux settings: END"
    - name: Add profile settings for bash
      blockinfile:
        path: "{{ ansible_env.HOME }}/.bash_profile"
        block: |
          HISTSIZE=100000
        create: yes
        marker_begin: "bash settings: BEGIN"
        marker_end: "bash settings: END"
    - name: Install Google Cloud SDK
      homebrew_cask:
        name: google-cloud-sdk
        update_homebrew: yes
        # TODO: After that, execute:
        #   $ /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/install.sh
        #   $ gcloud init
    - name: Install jq
      homebrew:
        name: jq
        update_homebrew: yes
- name: GCP specified play
  import_playbook: gcp.yml
